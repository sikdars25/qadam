SESSION AUTHENTICATION FIX GUIDE
=================================

PROBLEM:
--------
Session is not being maintained between requests:
- Login works and creates session
- But subsequent requests show: user_id=None, username=None
- Question Bank returns 401 "User not authenticated"

ROOT CAUSE:
-----------
The frontend is not sending cookies with API requests.
By default, fetch/axios does NOT send cookies to different origins.

SOLUTION:
=========

FRONTEND FIX (REQUIRED):
------------------------

The frontend needs to include credentials with ALL API requests.

Option 1: Using Axios (Recommended)
------------------------------------

File: src/api/config.js or wherever axios is configured

Add this configuration:

```javascript
import axios from 'axios';

const api = axios.create({
  baseURL: 'http://localhost:5000',
  withCredentials: true,  // ← THIS IS CRITICAL!
  headers: {
    'Content-Type': 'application/json'
  }
});

export default api;
```

Then use this api instance for all requests:

```javascript
// Instead of:
axios.get('http://localhost:5000/api/question-bank')

// Use:
api.get('/api/question-bank')
```


Option 2: Using fetch
---------------------

Add credentials to every fetch call:

```javascript
fetch('http://localhost:5000/api/question-bank', {
  credentials: 'include',  // ← THIS IS CRITICAL!
  headers: {
    'Content-Type': 'application/json'
  }
})
```


Option 3: Global Axios Configuration
-------------------------------------

File: src/index.js or src/App.js

Add at the top:

```javascript
import axios from 'axios';

// Set default config for all axios requests
axios.defaults.withCredentials = true;
axios.defaults.baseURL = 'http://localhost:5000';
```


VERIFICATION:
=============

After making frontend changes:

1. Clear browser cookies
2. Restart frontend: npm start
3. Login again
4. Check browser DevTools:
   - Network tab
   - Look at login request
   - Check Response Headers for "Set-Cookie"
   - Look at question-bank request
   - Check Request Headers for "Cookie"

Expected Flow:
--------------

1. POST /api/login
   Response Headers:
   Set-Cookie: session=abc123; Path=/; HttpOnly; SameSite=Lax

2. GET /api/question-bank
   Request Headers:
   Cookie: session=abc123

3. Backend Console:
   ✅ Session created for user admin (ID: 1)
   🔍 Question Bank request - Session: user_id=1, username=admin
   ✓ Fetched X questions from Cosmos DB


BACKEND IS ALREADY FIXED:
==========================

✅ Session configuration added
✅ CORS with credentials enabled
✅ Session cookies configured
✅ Debug logging added

Backend console shows:
🍪 Session cookies: SameSite=Lax, Secure=False


QUICK TEST:
===========

Test with curl to verify backend works:

1. Login and save cookie:
```bash
curl -X POST http://localhost:5000/api/login \
  -H "Content-Type: application/json" \
  -d '{"username":"admin","password":"admin"}' \
  -c cookies.txt \
  -v
```

2. Use cookie for Question Bank:
```bash
curl http://localhost:5000/api/question-bank \
  -b cookies.txt \
  -v
```

If this works, the backend is fine - it's a frontend issue.


COMMON FRONTEND LOCATIONS TO CHECK:
====================================

1. src/api/config.js
2. src/services/api.js
3. src/utils/api.js
4. src/config/axios.js
5. Any file that creates axios instance
6. Any file with fetch() calls


EXAMPLE FRONTEND FILES TO UPDATE:
==================================

If using React with axios:

File: src/api/index.js
```javascript
import axios from 'axios';

const API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000';

const api = axios.create({
  baseURL: API_BASE_URL,
  withCredentials: true,  // Enable cookies
  headers: {
    'Content-Type': 'application/json'
  }
});

// Login
export const login = (credentials) => api.post('/api/login', credentials);

// Question Bank
export const getQuestionBank = () => api.get('/api/question-bank');

// Textbooks
export const getTextbooks = (subject) => api.get('/api/textbooks', { params: { subject } });

export default api;
```


ALTERNATIVE: Check Existing Frontend Code
==========================================

Search for these patterns in frontend:

1. Search for: "axios.create"
   - Add: withCredentials: true

2. Search for: "fetch("
   - Add: credentials: 'include'

3. Search for: "baseURL"
   - Verify it's pointing to correct backend

4. Search for: "/api/login"
   - Check how login is called
   - Ensure same axios instance is used everywhere


DEBUGGING CHECKLIST:
====================

Backend (Already Done):
-----------------------
✅ CORS configured with supports_credentials=True
✅ Session cookies configured
✅ Session.permanent = True in login
✅ Debug logging added

Frontend (TODO):
----------------
☐ Add withCredentials: true to axios
☐ OR add credentials: 'include' to fetch
☐ Clear browser cookies
☐ Restart frontend
☐ Test login
☐ Check Network tab for cookies
☐ Test Question Bank


EXPECTED CONSOLE OUTPUT:
=========================

After Fix:
----------
Backend console:
✅ Session created for user admin (ID: 1)
🔍 Question Bank request - Session: user_id=1, username=admin
✓ Fetched 5 questions from Cosmos DB

Browser console:
✓ Login successful
✓ Question Bank loaded
✓ 5 questions displayed


SUMMARY:
========

The backend is working correctly!
The issue is that the frontend is not sending cookies.

Fix: Add withCredentials: true to axios configuration
OR: Add credentials: 'include' to fetch calls

This is a ONE-LINE fix in the frontend!


NEED HELP?
==========

If you're not sure where to add this:
1. Share your frontend code structure
2. Look for axios.create or fetch calls
3. Add withCredentials: true or credentials: 'include'
4. Restart frontend
5. Test again

The backend is ready and waiting! 🎉
