COSMOS DB MIGRATION - QUICK START GUIDE
========================================

WHAT WAS CREATED:
=================

✅ cosmos_db.py - Cosmos DB database layer
   - User CRUD operations
   - Replaces MySQL users table
   - Uses Azure Cosmos DB SDK

✅ app_cosmos.py - Test Flask server
   - Login endpoint (Cosmos DB)
   - Register endpoint (Cosmos DB)
   - Test user creation
   - Runs on port 5001

✅ test_cosmos_login.py - Automated test script
   - Tests all login scenarios
   - Easy verification


QUICK START (3 STEPS):
======================

STEP 1: Install Cosmos DB SDK
------------------------------
pip install azure-cosmos==4.5.1


STEP 2: Start Cosmos DB Emulator
---------------------------------
- Open Azure Cosmos DB Emulator (already on your PC)
- Wait for it to start
- Default: https://localhost:8081


STEP 3: Run Test Server
------------------------
python app_cosmos.py

Server starts on: http://localhost:5001


TESTING (2 METHODS):
====================

METHOD 1: Automated Test Script (EASIEST)
------------------------------------------
python test_cosmos_login.py

This will:
✅ Create test user
✅ Test login
✅ Test registration
✅ Test wrong password
✅ Show results


METHOD 2: Manual Testing
-------------------------

A. Create Test User:
curl -X POST http://localhost:5001/api/test/create-user

B. Test Login:
curl -X POST http://localhost:5001/api/login \
  -H "Content-Type: application/json" \
  -d "{\"username\":\"testuser\",\"password\":\"test123\"}"

C. Test Register:
curl -X POST http://localhost:5001/api/register \
  -H "Content-Type: application/json" \
  -d "{\"username\":\"myuser\",\"password\":\"mypass\",\"full_name\":\"My Name\",\"email\":\"my@email.com\"}"


VIEW DATA IN COSMOS DB:
=======================

1. Open browser: https://localhost:8081/_explorer/index.html
2. Click: qadam_academic database
3. Click: users container
4. See your users as JSON documents!


WHAT'S DIFFERENT?
=================

MySQL:
------
- Table: users
- Rows with columns
- SQL: SELECT * FROM users WHERE username = 'testuser'
- Auto-increment ID

Cosmos DB:
----------
- Container: users
- JSON documents
- Query: SELECT * FROM c WHERE c.username = 'testuser'
- UUID ID
- Partition key: username (for performance)

Example Document:
{
  "id": "abc-123-def-456",
  "username": "testuser",
  "password": "test123",
  "full_name": "Test User",
  "email": "test@example.com",
  "is_active": true,
  "is_admin": false,
  "created_at": "2025-10-27T13:40:00Z",
  "type": "user"
}


KEY FEATURES:
=============

✅ Same API interface as MySQL version
✅ Compatible with existing frontend
✅ Partition key optimization (username)
✅ UUID-based IDs
✅ Flexible schema (NoSQL)
✅ Easy to scale


NEXT STEPS:
===========

After successful login test:

1. ✅ Login working with Cosmos DB
2. ⏳ Migrate other tables:
   - uploaded_papers
   - textbooks
   - question_bank
   - usage_logs
3. ⏳ Update main app.py
4. ⏳ Create migration script (MySQL → Cosmos DB)
5. ⏳ Test all endpoints
6. ⏳ Deploy to Azure


TROUBLESHOOTING:
================

"Cannot connect to Cosmos DB"
→ Start Cosmos DB Emulator

"Module not found: azure.cosmos"
→ pip install azure-cosmos==4.5.1

"Port 5001 already in use"
→ Change port in app_cosmos.py

"Invalid credentials"
→ Create test user first


FILES STRUCTURE:
================

backend/
├── cosmos_db.py              ← Cosmos DB operations
├── app_cosmos.py             ← Test server (port 5001)
├── test_cosmos_login.py      ← Automated tests
├── requirements_cosmos.txt   ← Dependencies
├── COSMOS_DB_SETUP.txt       ← Detailed setup
└── QUICK_START_COSMOS.txt    ← This file


READY TO TEST!
==============

1. pip install azure-cosmos
2. Start Cosmos DB Emulator
3. python app_cosmos.py
4. python test_cosmos_login.py

✅ Login migration complete!
