TEXTBOOK FILE MISSING - EXPLANATION
====================================

ISSUE:
------
Textbook "leph1an_merged" exists in Cosmos DB but the PDF file is missing:
- Textbook ID: 21dbbbd2-71f0-4c0c-9700-dbbb61b93540
- Expected path: uploads\textbook_20251021_004446_leph1an_merged.pdf
- Status: File not found

ERROR MESSAGE:
--------------
Error extracting text from PDF: no such file: 'uploads\textbook_20251021_004446_leph1an_merged.pdf'


WHY THIS HAPPENS:
=================

1. **Cosmos DB Stores Metadata Only**
   - Textbook record in Cosmos DB contains:
     - ID, title, subject, user_id
     - file_path (reference to PDF)
     - chapters_extracted flag
   - Does NOT store the actual PDF file

2. **PDF Files Are Stored Separately**
   - Physical files stored in: backend/uploads/
   - File path in DB: uploads/textbook_20251021_004446_leph1an_merged.pdf
   - Actual location: backend/uploads/textbook_20251021_004446_leph1an_merged.pdf

3. **File Was Deleted or Never Uploaded**
   - The uploads/ directory is empty
   - Either:
     a) File was deleted manually
     b) Upload failed but metadata was saved
     c) Testing with sample data without actual file


SOLUTION OPTIONS:
=================

OPTION 1: Upload the Textbook Again
------------------------------------
1. Go to "Upload Textbook" page
2. Select the PDF file
3. Upload it
4. This will:
   - Save PDF to uploads/
   - Create new record in Cosmos DB
   - Generate new UUID

OPTION 2: Use Existing Textbook (If You Have the File)
-------------------------------------------------------
1. Place the PDF file in: backend/uploads/
2. Rename it to: textbook_20251021_004446_leph1an_merged.pdf
3. Try indexing again
4. Should work now

OPTION 3: Delete the Orphaned Record
-------------------------------------
If you don't have the file and don't need this textbook:
1. Delete the textbook record from Cosmos DB
2. Upload a new textbook with the actual file


CURRENT BEHAVIOR:
=================

**Before Fix:**
- Indexing would crash with FileNotFoundError
- No clear error message
- Confusing for users

**After Fix:**
- Clear error message: "Textbook file not found"
- Explains: "The PDF file needs to be uploaded before indexing"
- Shows expected file path
- Returns 404 with helpful message


TESTING:
========

**Test with Missing File:**
```bash
curl -X POST http://localhost:5000/api/index-textbook/21dbbbd2-71f0-4c0c-9700-dbbb61b93540
```

**Expected Response:**
```json
{
  "error": "Textbook file not found: uploads\\textbook_20251021_004446_leph1an_merged.pdf",
  "message": "The PDF file needs to be uploaded before indexing.",
  "file_path": "uploads\\textbook_20251021_004446_leph1an_merged.pdf"
}
```

**Test with Existing File:**
1. Upload a textbook
2. Note the textbook ID
3. Index it:
```bash
curl -X POST http://localhost:5000/api/index-textbook/<textbook_id>
```

**Expected Response:**
```json
{
  "success": true,
  "chapters_indexed": 15,
  "textbook_id": "<textbook_id>"
}
```


RECOMMENDED ACTION:
===================

**For Development/Testing:**
1. Delete the orphaned textbook record
2. Upload a new textbook with actual PDF file
3. Index the new textbook

**For Production:**
1. Implement file existence check before saving metadata
2. Use Azure Blob Storage for PDF files
3. Store blob URL in Cosmos DB
4. Ensure atomic uploads (file + metadata together)


FILE UPLOAD FLOW (CORRECT):
============================

1. User selects PDF file
2. Backend receives file
3. Save file to uploads/ directory
4. Generate unique filename
5. Save metadata to Cosmos DB with file_path
6. Return success

**Critical:** Both steps 3 and 5 must succeed together!


COSMOS DB RECORD STRUCTURE:
============================

```json
{
  "id": "21dbbbd2-71f0-4c0c-9700-dbbb61b93540",
  "type": "textbook",
  "title": "leph1an_merged",
  "subject": "Physics",
  "file_path": "uploads/textbook_20251021_004446_leph1an_merged.pdf",
  "user_id": "333cea7c-f0da-4a69-9041-be9a5b331d45",
  "chapters_extracted": false,
  "uploaded_at": "2025-10-21T00:44:46Z"
}
```

**Note:** file_path is just a string reference, not the actual file!


FUTURE IMPROVEMENTS:
====================

1. **File Validation:**
   - Check file exists before saving metadata
   - Verify file is readable PDF
   - Check file size limits

2. **Azure Blob Storage:**
   - Store PDFs in Azure Blob Storage
   - Store blob URL in Cosmos DB
   - Better scalability and reliability

3. **Cleanup Jobs:**
   - Periodic check for orphaned records
   - Delete metadata if file missing
   - Alert admin of inconsistencies

4. **Transaction Support:**
   - Atomic file + metadata operations
   - Rollback if either fails
   - Ensure consistency


SUMMARY:
========

‚úÖ **Fixed:** Better error message when file missing
‚úÖ **Explained:** Why file is separate from metadata
‚úÖ **Solutions:** Multiple options to resolve issue

‚ö†Ô∏è **Action Required:** Upload textbook again or place file manually

üîÑ **Next Steps:**
1. Upload a new textbook with PDF
2. Index it successfully
3. Test chapter extraction
4. Verify semantic search works

The backend is working correctly - it just needs the actual PDF file!
